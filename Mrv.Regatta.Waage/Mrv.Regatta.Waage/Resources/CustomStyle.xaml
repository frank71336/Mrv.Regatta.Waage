<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Mrv.Regatta.Waage.Controls"
                    xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework">

    <!-- sollte zur Design-Zeit die Hintergrundfarbe umstellen - tut aber nicht 
    <Style TargetType="{x:Type Page}">
        <Style.Triggers>
            <Trigger Property="ComponentModel:DesignerProperties.IsInDesignMode" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    -->

    <Style x:Key="BigFont" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="24" />
    </Style>

    <Style x:Key="BigFont2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="24" />
    </Style>

    <Style x:Key="BigFont3" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="24" />
    </Style>

    <!-- 
    <Style x:Key="Title" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="BlueViolet" />
        <Setter Property="FontSize" Value="18" />
    </Style>
    
    <Style x:Key="DialogWindow" TargetType="{x:Type Page}">
        <Setter Property="Background" Value="White" />
    </Style>

    <Style x:Key="DialogFontTextLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="DialogFontTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="DialogFontTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="DialogFontPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="DialogFontCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0,0,0,2" />
    </Style>
-->
    
    <!-- Styles der verwendeten Themes auf die eigenen UserControls übertragen -->



    <Style x:Key="MainButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="85" />
        <Setter Property="Height" Value="85" />
    </Style>
    <Style x:Key="MainButtonTop" TargetType="{x:Type Button}" BasedOn="{StaticResource MainButton}">
        <Setter Property="Margin" Value="0,0,0,4" />
    </Style>
    <Style x:Key="MainButtonBottom" TargetType="{x:Type Button}" BasedOn="{StaticResource MainButton}">
        <Setter Property="Margin" Value="0,4,0,0" />
    </Style>





    <Style TargetType="{x:Type controls:ImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ImageButton}">
                    <Button>
                        <Grid>
                            <StackPanel x:Name="stpTopLeft" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Source="{TemplateBinding Image}" Stretch="None" Width="{Binding Source.PixelWidth,RelativeSource={RelativeSource Self}}" />
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center"/>
                            </StackPanel>

                            <StackPanel  x:Name="stpBottomRight" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center"/>
                                <Image Source="{TemplateBinding Image}" Stretch="None" Width="{Binding Source.PixelWidth,RelativeSource={RelativeSource Self}}" />
                            </StackPanel>
                        </Grid>
                    </Button>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ImagePosition" Value="Top">
                            <Setter TargetName="stpBottomRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="stpTopLeft" Property="Visibility" Value="Visible" />
                            <Setter TargetName="stpTopLeft" Property="Orientation" Value="Vertical" />
                        </Trigger>
                        <Trigger Property="ImagePosition" Value="Left">
                            <Setter TargetName="stpBottomRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="stpTopLeft" Property="Visibility" Value="Visible" />
                            <Setter TargetName="stpTopLeft" Property="Orientation" Value="Horizontal" />
                        </Trigger>
                        <Trigger Property="ImagePosition" Value="Right">
                            <Setter TargetName="stpTopLeft" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="stpBottomRight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="stpBottomRight" Property="Orientation" Value="Horizontal" />
                        </Trigger>
                        <Trigger Property="ImagePosition" Value="Bottom">
                            <Setter TargetName="stpBottomRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="stpTopLeft" Property="Visibility" Value="Visible" />
                            <Setter TargetName="stpTopLeft" Property="Orientation" Value="Vertical" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style TargetType="{x:Type controls:DescriptionButton}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DescriptionButton}">
                    <Button HorizontalContentAlignment="Left" VerticalAlignment="Top">
                        <DockPanel x:Name="contentPresenter" LastChildFill="True" Margin="5" VerticalAlignment="Center">
                            <Image DockPanel.Dock="Left" Source="{TemplateBinding Image}" Stretch="None" Width="{Binding Source.PixelWidth,RelativeSource={RelativeSource Self}}" />
                            <StackPanel Orientation="Vertical" Margin="5">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                                <Label FontSize="12" FontWeight="Normal" FontStyle="Italic">
                                    <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Description}" />
                                </Label>
                            </StackPanel>
                        </DockPanel>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>